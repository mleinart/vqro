syntax = "proto3";
option cc_enable_arenas = true;


package vqro.rpc;


service VaqueroStorage {
  rpc WriteDatapoints(stream WriteOperation)
      returns (stream StatusMessage) {}

  rpc ReadDatapoints(ReadOperation)
      returns (stream ReadResult) {}

  // TODO: Figure out a way to communicate result count
  rpc SearchSeries(SeriesQuery)
      returns (stream SearchSeriesResult) {}

  rpc SearchLabels(LabelsQuery)
      returns (stream SearchLabelsResult) {}
}


message Series {
  map<string,string> labels = 1;
}


message Datapoint {
  int64 timestamp = 1;
  int64 duration = 2;
  double value = 3;
}


message StatusMessage {
  string text = 1;
  bool error = 2;
  bool go_away = 3;
}


message WriteOperation {
  Series series = 1;
  repeated Datapoint datapoints = 2;
}


message ReadOperation {
  SeriesQuery query = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  int64 datapoint_limit = 4;
  bool prefer_latest = 5;
}


message ReadResult {
  Series series = 1;
  repeated Datapoint datapoints = 2;
  StatusMessage status = 3;
}


message SeriesQuery {
  repeated LabelConstraint constraints = 1;
  int32 result_offset = 2;
  int32 result_limit = 3;
}


message LabelConstraint {
  string label_name = 1;
  //XXX Ditch the enum, use two fields:
  // string exact_value = 2;
  // string regex_pattern = 3;
  enum Operator {
    EQUALS = 0;
    REGEX_MATCHES = 1;
  }
  Operator constraint_op = 2;
  string operand = 3;
}


message SearchSeriesResult {
  repeated Series matching_series = 1;
  StatusMessage status = 2;
}


message LabelsQuery {
  string regex = 1;
  int32 result_offset = 2;
  int32 result_limit = 3;
}

message SearchLabelsResult {
  repeated string labels = 1;
  StatusMessage status = 2;
}
